name: CI/CD Pipeline

on:
  push:
    branches:
      - "**"  # Match all branches
  pull_request:
    branches:
      - "**"  # Match all branches

jobs:
  
  lint:
    name: Run Ruff Linting
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3
        #with:
        #  submodules: recursive
      
      # Step 2
      - name: Debug Secrets
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | wc -c
      
      # Step 3: Set up SSH key
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      # Step 2: Build the Docker container
      - name: Build Docker container for Ruff
        run: |
          docker build --no-cache --progress=plain --build-arg SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}" -t assas-database-ruff . | tee build_ruff.log

      # Step 3: Run Ruff linting inside the Docker container
      - name: Run Ruff
        run: docker run --rm assas-database-ruff ruff check . --exclude /app/astecV3.1.2,/app/test/dev_test/

  test:
     name: Run Unit Tests
     runs-on: ubuntu-latest
      
     steps:
       # Step 1: Check out the code
       - name: Checkout code
         uses: actions/checkout@v3

       # Step 2: Build the Docker container for Unit Tests
       - name: Build Docker container for Unit Tests
         run: |
          docker build --build-arg SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}" --progress=plain -t assas-database-test . | tee build.log
      
       # Step 3: Set up Python
       - name: Set up Python
         uses: actions/setup-python@v4
         with:
           python-version: 3.11  # Specify the Python version
      
       # Step 4: Install dependencies
       - name: Install dependencies
         run: |
           python -m pip install --upgrade pip
           pip install -r requirements.txt
      
       # Step 5: Change directory to `assas_database`
       - name: Install assas_database package
         run: |
          pip install -e .

       # Step 6: Run unit tests
       - name: Run tests
         env:
          ASTEC_ROOT: /app/astecV3.1.2
         run: |
          python test/test_astec_archive.py
          python test/test_database_handler.py
          python test/test_document_file.py
          python test/test_database_manager.py
          python test/test_conversion_handler.py
          python test/test_odessa_netcdf4_converter.py
       
       - name: Upload HTML test report
         uses: actions/upload-artifact@v4
         with:
          name: html-test-report
          path: test_reports/

       - name: Upload test log
         uses: actions/upload-artifact@v4
         with:
          name: test-log
          path: test/log/