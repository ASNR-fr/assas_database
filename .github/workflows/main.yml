name: CI/CD Pipeline

on:
  push:
    branches:
      - "**"  # Match all branches
  pull_request:
    branches:
      - "**"  # Match all branches

jobs:
  
  lint:
    name: Run Ruff Linting
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3
        #with:
        #  submodules: recursive
      
      # Step 2
      - name: Debug Secrets
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | wc -c
      
      # Step 3: Set up SSH key
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      # Step 2: Build the Docker container
      - name: Build Docker container for Ruff
        run: |
          docker build -f Dockerfile.base \
            --build-arg SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}" \
            -t assas-database-ruff .

      # Step 3: Run Ruff linting inside the Docker container
      - name: Run Ruff
        run: |
          docker run --rm assas-database-ruff \
            ruff check . --exclude /app/test/dev_test/

  test:
     name: Run Unit Tests
     runs-on: ubuntu-latest
      
     steps:
       # Step 1: Check out the code
       - name: Checkout code
         uses: actions/checkout@v3

       # Step 2: Build the Docker container for Unit Tests
       - name: Build Docker container for Unit Tests
         run: |
          docker build -f Dockerfile.test \
            --build-arg SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}" \
            --build-arg LSDF_USER="${{ secrets.LSDF_USER }}" \
            --build-arg LSDF_PWD="${{ secrets.LSDF_PWD }}" \
            -t assas-database-test .
      
       # Step 3: Run tests in Docker container
       - name: Run tests in Docker container
         run: |
          docker run --rm \
            -e ASTEC_ROOT=/app/astecV3.1.2 \
            -e ASTEC_TYPE=linux64 \
            assas-database-test \
            bash -c "python3.11 test/test_astec_archive.py && \
                     python3.11 test/test_database_handler.py && \
                     python3.11 test/test_document_file.py && \
                     python3.11 test/test_database_manager.py && \
                     python3.11 test/test_conversion_handler.py && \
                     python3.11 test/test_odessa_netcdf4_converter.py"
